<?php

namespace App;
use App\Traits\EncryptionTrait;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

class VideoDetail extends Model
{
    use EncryptionTrait;
    protected $table='video_details';
    protected $fillable=['name','description','category_id','image','assess','user_id','updated_id','active','time', 'at_home'];
    protected $appends = ['humans_date', 'id_hash'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($video_detail){
            $video_detail->slug = str_slug($video_detail->name, '-', config('locale'));
        });
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function category()
    {
        return $this->belongsTo(Category::class);
    }
    public function getHumansDateAttribute()
    {
        return Carbon::parse($this->created_at)->diffForHumans();
    }

    function getIdHashAttribute()
    {
        return $this->encrypt($this->id);
    }

    public function videos(){ /** هادي لازم تكون جمع عشان hasMany */
        return $this->hasMany(Video::class);
    }
    public function scopeActive($q)
    {
        return $q->where('active', 1);
    }
    public function getTimeAttribute()
    {
        return Carbon::parse($this->attributes['time'])->format('H:i');
    }
    public function scopeRandomVidoe($query)
    {
        return $query->where('created_at', '>', (new \Carbon\Carbon)->submonths(1) );
    }

    public function scopeHome($q)
    {
        return $q->where('at_home', 1);
    }



}
