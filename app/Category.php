<?php

namespace App;
use App\Traits\EncryptionTrait;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    use EncryptionTrait;

    protected $fillable=['name','parent_id','description','user_id','active'];
    protected $appends = ['humans_date','id_hash'];

    /** @noinspection PhpDeprecationInspection */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($category) {
           $category->slug = str_slug($category->name, '-', config('locale'));
        });
    }

    function getIdHashAttribute()
    {
        return $this->encrypt($this->id);
    }

    public function news()
    {
         return $this->hasMany(News::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function branches()
    {
        return $this->hasMany(VideoDetail::class, 'category_id');

    }

    public function getHumansDateAttribute()
    {
        return Carbon::parse($this->created_at)->diffForHumans();
    }

    public function children(){

        return $this->hasMany(Category::Class,'parent_id');
    }



    public function parent()
    {
        return $this->belongsTo(Category::class, 'parent_id');
    }

    public function scopeNewsCategories($q)
    {
        return $q->where('parent_id', 1);
    }

    public function scopeVideoCategories($q)
    {
        return $q->where('parent_id', 2);
    }
    public function scopeNewCategories($q)
    {
        return $q->where('parent_id', 1);
    }

    public function scopeActive($q)
    {
        return $q->where('active', 1);
    }
}
